# This is based on file and files in ci/appveyor are from 
# https://github.com/ogrisel/python-appveyor-demo
environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\ci\\appveyor\\run_with_env.cmd"

  matrix:
    # Pre-installed Python versions
    # See: http://www.appveyor.com/docs/installed-software#python
    # build is limited to 60 minutes, without caching each build takes 10-30 minutes
    # with caching build takes less than 1 minute

     # Python 2.6 will need to run this `pip install unittest2`
#    - PYTHON: "C:\\Python26"
#      PYTHON_VERSION: "2.6.x"
#      PYTHON_ARCH: "32"

#    - PYTHON: "C:\\Python26-x64"
#      PYTHON_VERSION: "2.6.x"
#      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x"
      PYTHON_ARCH: "64"

#    - PYTHON: "C:\\Python33"
#      PYTHON_VERSION: "3.3.x"
#      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python33-x64"
      PYTHON_VERSION: "3.3.x"
      PYTHON_ARCH: "64"

#    - PYTHON: "C:\\Python34"
#      PYTHON_VERSION: "3.4.x"
#      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python34-x64"
      PYTHON_VERSION: "3.4.x"
      PYTHON_ARCH: "64"
      
    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x"
      PYTHON_ARCH: "64"

cache:
    - C:\Users\appveyor\AppData\Local\pip\Cache\wheels

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Install Python (from the official .msi of http://python.org) and pip when
  # not already installed.
  # - ps: if (-not(Test-Path($env:PYTHON))) { & ci\appveyor\install.ps1 }

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"
  
  # install wheel, caching
  - "pip install wheel"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "%CMD_IN_ENV% pip install -r requirements-dev.txt"

build_script:
  # Build and install pyproj
  # - "%CMD_IN_ENV% python setup.py install"
  - "%CMD_IN_ENV% pip install ."

test_script:
  # Run the project tests
  - "%CMD_IN_ENV% python -c \"import pyproj; pyproj.test()\""
  - "%CMD_IN_ENV% python -c \"import pyproj; pyproj.Proj(init='epsg:4269')\""
  - "%CMD_IN_ENV% python unittest/test.py -v"

#after_test:
  # If tests are successful, create binary packages for the project.
  # - "%CMD_IN_ENV% python setup.py bdist_wheel"
  # - "%CMD_IN_ENV% python setup.py bdist_wininst"
  # - "%CMD_IN_ENV% python setup.py bdist_msi"
  # - ps: "ls dist"

#artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  # - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#

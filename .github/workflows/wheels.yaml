name: Wheels

on:
  push:
    branches: [ main ]
  release:
    types: [ created ]

jobs:
  build_wheels:
    name: Build ${{ matrix.arch }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      PROJ_VERSION: "8.2.0"
      PROJ_DIR: ${GITHUB_WORKSPACE}/pyproj/proj_dir
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-10.15
          arch: x86_64
          cmake_osx_architectures: x86_64
        # - os: macos-10.15
        #   arch: arm64
        #   cmake_osx_architectures: arm64
        # - os: macos-10.15
        #   arch: universal2
        #   cmake_osx_architectures: "x86_64;arm64"
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.3.1
        env:
          CIBW_ARCHS: ${{ matrix.arch }}
          CIBW_ENVIRONMENT_MACOS:
            PROJ_WHEEL=true
            PROJ_VERSION=${{ env.PROJ_VERSION }}
            PROJ_DIR=${{ env.PROJ_DIR }}
            MACOSX_DEPLOYMENT_TARGET=10.9
            CMAKE_OSX_ARCHITECTURES='${{ matrix.cmake_osx_architectures }}'
            LDFLAGS="${LDFLAGS} -Wl,-rpath,${{ env.PROJ_DIR }}/lib"
          CIBW_BEFORE_ALL: bash ./ci/proj-compile-wheels.sh
          CIBW_TEST_REQUIRES: cython pytest oldest-supported-numpy pandas xarray
          CIBW_BEFORE_TEST: python -m pip install shapely~=1.7.1 || echo "Shapely install failed"
          CIBW_TEST_COMMAND: >
            pyproj -v &&
            python -c "import pyproj; pyproj.Proj(init='epsg:4269')"  &&
            cp -r {package}/test . &&
            PROJ_NETWORK=ON python -m pytest test -v -s

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
          retention-days: 5

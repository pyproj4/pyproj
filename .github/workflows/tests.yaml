name: Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron:  '0 0 * * 0'

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
            python-version: 3.9
      - uses: pre-commit/action@v2.0.0
      - name: Install mypy
        run: |
          python -m pip install mypy types-certifi
      - name: mypy
        run: |
          mypy pyproj

  test:
    needs: linting
    name: ${{ matrix.os }}, ${{ matrix.python-implementation }}=${{ matrix.python-version }}, PROJ=${{ matrix.proj-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.8, 3.9, '3.10']
        python-implementation: [python]
        proj-version: ['*']
        env:
          - PYPROJ_FULL_COVERAGE: YES
        include:
          - os: ubuntu-latest
            python-version: 3.8
            python-implementation: python
            proj-version: 8.0
          - os: ubuntu-latest
            python-version: 3.8
            python-implementation: python
            proj-version: 8.1
          # disabled until pypy has 3.8+ version
          # - os: ubuntu-latest
          #   python-version: '*'
          #   python-implementation: pypy
          #   proj-version: '*'
    steps:
      - uses: actions/checkout@v2

      - name: Setup Conda
        uses: s-weigand/setup-conda@v1
        with:
          conda-channels: conda-forge

      - name: Install Env
        shell: bash
        run: |
          conda config --prepend channels conda-forge
          conda config --set channel_priority strict
          export INSTALL_DEPS='${{ matrix.python-implementation }}=${{ matrix.python-version }} cython proj=${{ matrix.proj-version }} numpy xarray pandas'
          if [ "${{ matrix.os }}" = "macos-latest" -a "${{ matrix.python-version }}" = "3.10" ]; then
            sed -i.bak '/shapely/d' requirements-test.txt;
          else
            export INSTALL_DEPS="${INSTALL_DEPS} shapely";
          fi;
          conda create -n test $INSTALL_DEPS
          source activate test
          python -m pip install -e . --no-use-pep517 || python -m pip install -e .
          python -m pip install -r requirements-test.txt

      - name: Check and Log Environment
        shell: bash
        run: |
          source activate test
          python -V
          pyproj -v
          conda info

      - name: Install pylint
        shell: bash
        if: matrix.python-implementation == 'python'
        run: |
          source activate test
          python -m pip install pylint

      - name: pylint
        shell: bash
        if: matrix.python-implementation == 'python'
        run: |
          source activate test
          pylint pyproj

      - name: Test with Coverage
        shell: bash
        if: matrix.python-implementation == 'python'
        run: |
          source activate test
          py.test --cov-report term-missing --cov=pyproj --cov-report xml

      - name: Test
        shell: bash
        if: matrix.python-implementation == 'pypy'
        run: |
          source activate test
          py.test

      - name: Test Network
        shell: bash
        env:
          PROJ_NETWORK: ON
        run: |
          source activate test
          py.test

      - name: Test Global Context
        shell: bash
        env:
          PYPROJ_GLOBAL_CONTEXT: ON
        run: |
          source activate test
          py.test

      - name: Test Grids
        shell: bash
        run: |
          source activate test
          projsync --quiet --bbox -175,0,-50,85
          py.test

      - name: Test Build docs
        shell: bash
        if: contains(matrix.os, 'ubuntu') && matrix.python-implementation == 'python'
        run: |
          source activate test
          python -m pip install -r requirements-docs.txt
          sphinx-build -b html docs/ docs/_build/
          sphinx-build -b man docs/ docs/_build/

      - uses: codecov/codecov-action@v1

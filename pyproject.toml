[build-system]
requires = ["setuptools>=61.0.0", "wheel", "cython>=3"]
build-backend = "setuptools.build_meta"

[project]
name = "pyproj"
dynamic = ["version"]
description = "Python interface to PROJ (cartographic projections and coordinate transformations library)"
readme = "README.md"
authors = [
    {name = "Jeff Whitaker", email = "jeffrey.s.whitaker@noaa.gov"},
]
maintainers = [
    {name = "pyproj contributors"},
]
license = {text = "MIT"}
keywords = [
    "GIS",
    "map",
    "geospatial",
    "coordinate-systems",
    "coordinate-transformation",
    "cartographic-projection",
    "geodesic",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
requires-python = ">=3.10"
dependencies = [
    "certifi",
]

[project.urls]
homepage = "https://pyproj4.github.io/pyproj/"
documentation = "https://pyproj4.github.io/pyproj/"
repository = "https://github.com/pyproj4/pyproj"
changelog = "https://pyproj4.github.io/pyproj/stable/history.html"

[project.scripts]
pyproj = "pyproj.__main__:main"

[tool.setuptools]
zip-safe = false # https://mypy.readthedocs.io/en/stable/installed_packages.html

[tool.setuptools.packages.find]
include = ["pyproj", "pyproj.*"]

[tool.setuptools.dynamic]
version = {attr = "pyproj.__version__"}

[tool.black]
target_version = ["py310"]

[tool.ruff]
line-length = 88
target-version = "py310"
fix = true

[tool.ruff.lint]
unfixable = []

select = [
  # pyflakes
  "F",
  # pycodestyle
  "E", "W",
  # flake8-2020
  "YTT",
  # flake8-bugbear
  "B",
  # flake8-quotes
  "Q",
  # flake8-debugger
  "T10",
  # flake8-gettext
  "INT",
  # pylint
#   "PL",
  # flake8-pytest-style
#   "PT",
  # misc lints
  "PIE",
  # flake8-pyi
  "PYI",
  # tidy imports
  "TID",
  # implicit string concatenation
  "ISC",
  # type-checking imports
  "TCH",
  # comprehensions
  "C4",
  # pygrep-hooks
  "PGH",
  # Ruff-specific rules
  "RUF",
  # flake8-bandit: exec-builtin
  "S102",
  # NumPy-specific rules
  "NPY",
  # Perflint
  "PERF",
  # flynt
  "FLY",
  # flake8-logging-format
  "G",
  # flake8-future-annotations
  "FA",
  # flake8-slots
  "SLOT",
  # flake8-raise
  "RSE",
]

ignore = [
    ### Intentionally disabled
    # Line too long
    "E501",
    # Unnecessary `dict` call (rewrite as a literal)
    "C408",
    # Consider iterable unpacking instead of concatenation
    "RUF005",
    # No explicit `stacklevel` keyword argument found
    "B028",
    # Unused `noqa` directive # Only work if ruff is the solve linter/formatter
    "RUF100",
    # `zip()` without an explicit `strict=` parameter
    "B905",
    # Only simple default values allowed for typed arguments
    "PYI011",

    ### TODO: Enable gradually
    # Rename unused
    "B007",
    # Move standard library import into a type-checking block
    "TCH003",
    # Consider f-string instead of string join
    "FLY002",
    # Use a list comprehension to create a transformed list
    "PERF401"

]

[tool.mypy]
files = ["pyproj"]
python_version = "3.10"
ignore_errors = false
enable_error_code = "ignore-without-code"
